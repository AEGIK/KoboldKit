<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/KTTilemapLayerTiles.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/KTTilemapLayerTiles</TokenIdentifier>
			<Abstract type="html">TMX Tiles of a tile layer. This is just a list of GIDs pointing to a specific tile in the tileset.
   The GIDs have the KTTilemapTileFlip flags encoded, so it is recommended to use the tileAt method from KTTilemapLayer
   instead of accessing the GIDs directly.</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>
			
			<NodeRef refid="18"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KTTilemapLayerTiles/setGid:</TokenIdentifier>
			<Abstract type="html">Returns the memory buffer containing a layer's tile GIDs.</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) gid_t *gid</Declaration>
			
			
			<Anchor>//api/name/gid</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KTTilemapLayerTiles/gid</TokenIdentifier>
			<Abstract type="html">Returns the memory buffer containing a layer's tile GIDs.</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) gid_t *gid</Declaration>
			
			
			<Anchor>//api/name/gid</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KTTilemapLayerTiles/gid</TokenIdentifier>
			<Abstract type="html">Returns the memory buffer containing a layer's tile GIDs.</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) gid_t *gid</Declaration>
			
			
			<Anchor>//api/name/gid</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KTTilemapLayerTiles/setGidSize:</TokenIdentifier>
			<Abstract type="html">Returns the size (in bytes) of the GID memory buffer. Equal to (mapSize.width  mapSize.height  sizeof(gid_t)).</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) unsigned int gidSize</Declaration>
			
			
			<Anchor>//api/name/gidSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KTTilemapLayerTiles/gidSize</TokenIdentifier>
			<Abstract type="html">Returns the size (in bytes) of the GID memory buffer. Equal to (mapSize.width  mapSize.height  sizeof(gid_t)).</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) unsigned int gidSize</Declaration>
			
			
			<Anchor>//api/name/gidSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KTTilemapLayerTiles/gidSize</TokenIdentifier>
			<Abstract type="html">Returns the size (in bytes) of the GID memory buffer. Equal to (mapSize.width  mapSize.height  sizeof(gid_t)).</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) unsigned int gidSize</Declaration>
			
			
			<Anchor>//api/name/gidSize</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KTTilemapLayerTiles/setGidCount:</TokenIdentifier>
			<Abstract type="html">Returns the number of GIDs in the GID memory buffer. Equal to (mapSize.width * mapSize.height).</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) unsigned int gidCount</Declaration>
			
			
			<Anchor>//api/name/gidCount</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KTTilemapLayerTiles/gidCount</TokenIdentifier>
			<Abstract type="html">Returns the number of GIDs in the GID memory buffer. Equal to (mapSize.width * mapSize.height).</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) unsigned int gidCount</Declaration>
			
			
			<Anchor>//api/name/gidCount</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KTTilemapLayerTiles/gidCount</TokenIdentifier>
			<Abstract type="html">Returns the number of GIDs in the GID memory buffer. Equal to (mapSize.width * mapSize.height).</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) unsigned int gidCount</Declaration>
			
			
			<Anchor>//api/name/gidCount</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KTTilemapLayerTiles/takeOwnershipOfGidBuffer:bufferSize:</TokenIdentifier>
			<Abstract type="html">Takes an already allocated GID buffer with the given bufferSize (in bytes) and takes ownership for it.
   Which means: you should not free() the tiles buffer, it will be freed by KTTilemapLayerTiles when it deallocates.</Abstract>
			<DeclaredIn>KTTilemapLayerTiles.h</DeclaredIn>			
			
			<Declaration>- (void)takeOwnershipOfGidBuffer:(gid_t *)tiles bufferSize:(unsigned int)bufferSize</Declaration>
			
			
			<Anchor>//api/name/takeOwnershipOfGidBuffer:bufferSize:</Anchor>
		</Token>
		
	</File>
</Tokens>